name: Release

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to build for'
        required: true

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: dirtree-macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: dirtree-macos-arm
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: dirtree-linux
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: dirtree-windows.exe

    steps:
      - uses: actions/checkout@v4
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Rename binary
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv target/${{ matrix.target }}/release/dirtree.exe ${{ matrix.binary_name }}
          else
            mv target/${{ matrix.target }}/release/dirtree ${{ matrix.binary_name }}
          fi
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./${{ matrix.binary_name }}
          asset_name: ${{ matrix.binary_name }}
          asset_content_type: application/octet-stream